{"trial_id": "0000", "hyperparameters": {"space": [{"class_name": "Int", "config": {"name": "num_layers", "default": null, "conditions": [], "min_value": 1, "max_value": 3, "step": 1, "sampling": "linear"}}, {"class_name": "Choice", "config": {"name": "units_0", "default": 32, "conditions": [], "values": [32, 64, 128, 256], "ordered": true}}, {"class_name": "Float", "config": {"name": "l2", "default": 1e-05, "conditions": [], "min_value": 1e-05, "max_value": 0.01, "step": null, "sampling": "log"}}, {"class_name": "Float", "config": {"name": "dropout_0", "default": 0.1, "conditions": [], "min_value": 0.1, "max_value": 0.5, "step": 0.1, "sampling": "linear"}}, {"class_name": "Float", "config": {"name": "rec_dropout_0", "default": 0.0, "conditions": [], "min_value": 0.0, "max_value": 0.3, "step": 0.1, "sampling": "linear"}}, {"class_name": "Choice", "config": {"name": "learning_rate", "default": 0.01, "conditions": [], "values": [0.01, 0.001, 0.0001], "ordered": true}}, {"class_name": "Choice", "config": {"name": "units_1", "default": 32, "conditions": [], "values": [32, 64, 128, 256], "ordered": true}}, {"class_name": "Float", "config": {"name": "dropout_1", "default": 0.1, "conditions": [], "min_value": 0.1, "max_value": 0.5, "step": 0.1, "sampling": "linear"}}, {"class_name": "Float", "config": {"name": "rec_dropout_1", "default": 0.0, "conditions": [], "min_value": 0.0, "max_value": 0.3, "step": 0.1, "sampling": "linear"}}], "values": {"num_layers": 2, "units_0": 64, "l2": 0.0003520276190264877, "dropout_0": 0.2, "rec_dropout_0": 0.1, "learning_rate": 0.001, "tuner/epochs": 2, "tuner/initial_epoch": 0, "tuner/bracket": 4, "tuner/round": 0, "units_1": 32, "dropout_1": 0.1, "rec_dropout_1": 0.0}}, "metrics": {"metrics": {}}, "score": null, "best_step": 0, "status": "FAILED", "message": "Traceback (most recent call last):\n  File \"c:\\Users\\giakh\\miniconda3\\envs\\ai_train\\Lib\\site-packages\\keras_tuner\\src\\engine\\base_tuner.py\", line 274, in _try_run_and_update_trial\n    self._run_and_update_trial(trial, *fit_args, **fit_kwargs)\n  File \"c:\\Users\\giakh\\miniconda3\\envs\\ai_train\\Lib\\site-packages\\keras_tuner\\src\\engine\\base_tuner.py\", line 239, in _run_and_update_trial\n    results = self.run_trial(trial, *fit_args, **fit_kwargs)\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\giakh\\miniconda3\\envs\\ai_train\\Lib\\site-packages\\keras_tuner\\src\\tuners\\hyperband.py\", line 427, in run_trial\n    return super().run_trial(trial, *fit_args, **fit_kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\giakh\\miniconda3\\envs\\ai_train\\Lib\\site-packages\\keras_tuner\\src\\engine\\tuner.py\", line 314, in run_trial\n    obj_value = self._build_and_fit_model(trial, *args, **copied_kwargs)\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\giakh\\miniconda3\\envs\\ai_train\\Lib\\site-packages\\keras_tuner\\src\\engine\\tuner.py\", line 233, in _build_and_fit_model\n    results = self.hypermodel.fit(hp, model, *args, **kwargs)\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\giakh\\miniconda3\\envs\\ai_train\\Lib\\site-packages\\keras_tuner\\src\\engine\\hypermodel.py\", line 149, in fit\n    return model.fit(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\giakh\\miniconda3\\envs\\ai_train\\Lib\\site-packages\\keras\\src\\utils\\traceback_utils.py\", line 122, in error_handler\n    raise e.with_traceback(filtered_tb) from None\n  File \"c:\\Users\\giakh\\miniconda3\\envs\\ai_train\\Lib\\site-packages\\keras\\src\\callbacks\\early_stopping.py\", line 129, in _set_monitor_op\n    raise ValueError(\nValueError: EarlyStopping callback received monitor=val_r2_keras but Keras isn't able to automatically determine whether that metric should be maximized or minimized. Pass `mode='max'` in order to do early stopping based on the highest metric value, or pass `mode='min'` in order to use the lowest value.\n"}